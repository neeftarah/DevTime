services:
  php:
    image: php:8.4-fpm
    container_name: devtime-php
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    volumes:
      - .:/var/www/html:cached
      - /var/www/html/vendor
      - /var/www/html/var
      - /var/www/html/node_modules
    working_dir: /var/www/html
    environment:
      PHP_IDE_CONFIG: "serverName=devtime"
    networks:
      - devtime_network
    depends_on:
      - database

  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: devtime-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-devtime}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-P@ssw0rd4Tests}
      POSTGRES_USER: ${POSTGRES_USER:-devtime}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-devtime}", "-U", "${POSTGRES_USER:-devtime}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw
    networks:
      - devtime_network
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

  nginx:
    image: nginx:stable-alpine
    container_name: devtime-nginx
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html:cached
      - .docker/nginx/conf.d/devtime.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - devtime_network

  rabbitmq:
    image: rabbitmq:4-management
    container_name: devtime-rabbitmq
    ports:
      - "5672:5672"       # Port pour l'application (AMQP)
      - "15672:15672"     # Port pour l'interface web de gestion
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - devtime_network

  redis:
    image: redis:8-alpine
    container_name: devtime-redis
    ports:
      - "6379:6379"
    networks:
      - devtime_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.3
    container_name: devtime-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.ml.enabled=false
      - bootstrap.memory_lock=true
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - devtime_network
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data

networks:
  devtime_network:
    driver: bridge

volumes:
  ###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
  elasticsearch_data:
